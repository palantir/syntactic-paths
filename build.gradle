buildscript {
    repositories {
        mavenCentral() { metadataSources { mavenPom(); ignoreGradleMetadataRedirection() } }
        gradlePluginPortal() { metadataSources { mavenPom(); ignoreGradleMetadataRedirection() } }
    }

    dependencies {
        classpath 'com.palantir.jakartapackagealignment:jakarta-package-alignment:0.6.0'
        classpath 'com.palantir.gradle.jdks:gradle-jdks:0.34.0'
        classpath 'com.palantir.gradle.jdkslatest:gradle-jdks-latest:0.12.0'
        classpath 'com.palantir.baseline:gradle-baseline-java:5.40.0'
        classpath 'com.palantir.gradle.consistentversions:gradle-consistent-versions:2.20.0'
        classpath 'com.palantir.gradle.externalpublish:gradle-external-publish-plugin:1.14.0'
        classpath 'com.palantir.gradle.gitversion:gradle-git-version:3.0.0'
        classpath 'com.palantir.gradle.revapi:gradle-revapi:1.7.0'
        classpath 'com.palantir.javaformat:gradle-palantir-java-format:2.40.0'
        classpath 'gradle.plugin.org.inferred:gradle-processors:3.7.0'
        classpath 'me.champeau.jmh:jmh-gradle-plugin:0.7.2'
    }
}

apply plugin: 'java'
apply plugin: 'com.palantir.baseline'
apply plugin: 'com.palantir.baseline-java-versions'
apply plugin: 'com.palantir.consistent-versions'
apply plugin: 'com.palantir.external-publish'
apply plugin: 'com.palantir.git-version'
apply plugin: 'com.palantir.jdks.latest'

javaVersions {
    libraryTarget = 11
    runtime = 21
}

allprojects {
    apply plugin: 'java-library'
    apply plugin: 'com.palantir.java-format'
    apply plugin: 'com.palantir.baseline-class-uniqueness'
    apply plugin: 'com.palantir.baseline-exact-dependencies'
    apply plugin: 'org.inferred.processors'
    apply plugin: 'com.palantir.jakarta-package-alignment'

    version gitVersion()
    group 'com.palantir.syntactic-paths'

    repositories {
        mavenCentral() { metadataSources { mavenPom(); ignoreGradleMetadataRedirection() } }
    }

    tasks.withType(JavaCompile) {
        options.compilerArgs += ['-Werror']
    }

    tasks.check.dependsOn javadoc, checkUnusedDependencies
}
